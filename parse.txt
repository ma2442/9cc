program = func*
func = declaration "(" (declaration ("," declaration)* )? ")" "{" stmt* "}"
stmt    =
    declaration ";"
    | expr ";" 
    | "{" stmt* "}"
    | "return" expr ";" 
    | "if" "(" expr ")" stmt ("else" stmt )? 
    | "while" "(" expr ")" stmt
    | "for" "(" expr? ";" expr? ";" expr? ")" stmt
    | ...
declaration = "int" "*"* ident
expr    = assign
assign  = equality ("=" assign)?
equality    = relational (("=="|"!=") relational)*
relational  = add (("<"|">"|"<="|">=") add)*
add = mul (("+"|"=") mul)*
mul = unary (("*"|"/") unary)* // <- "%" は?
unary   = "sizeof" unary | ("+"|"-")? primary | ("*"|"&") unary
primary = ident 
    | ident "(" (expr ("," expr)* )? ")" 
    | num 
    | "(" expr ")"
ident = ("_" | ALPHA | alpha) ("_" | ALPHA | alpha | ten)*

ALPHA = "A" | "B" | ... | "Z"
alpha = "a" | "b" | ... | "z"
num = ten ten*
ten = "0" | "1" | ... | "9"
